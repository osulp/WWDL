# /etc/nginx/nginx.conf

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /proc/self/fd/2 warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# Uncomment to include files with config snippets into the root context.
# NOTE: This will be enabled by default in Alpine 3.15.
#include /etc/nginx/conf.d/*.conf;

events {
   # The maximum number of simultaneous connections that can be opened by
   # a worker process.
   worker_connections 1024;
}

http {
   # Includes mapping of file name extensions to MIME types of responses
   # and defines the default type.
   include /etc/nginx/mime.types;
   default_type application/octet-stream;

   # Name servers used to resolve names of upstream servers into addresses.
   # It's also needed when using tcpsocket and udpsocket in Lua modules.
   #resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;

   # Don't tell nginx version to the clients. Default is 'on'.
   server_tokens off;

   # Specifies the maximum accepted body size of a client request, as
   # indicated by the request header Content-Length. If the stated content
   # length is greater than this size, then the client receives the HTTP
   # error code 413. Set to 0 to disable. Default is '1m'.
   client_max_body_size 250m;

   # Sendfile copies data between one FD and other from within the kernel,
   # which is more efficient than read() + write(). Default is off.
   sendfile on;

   # Causes nginx to attempt to send its HTTP response head in one packet,
   # instead of using partial frames. Default is 'off'.
   tcp_nopush on;

   # Enable gzipping of responses.
   gzip on;

   # Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
   gzip_vary on;

   # Helper variable for proxying websockets.
   map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
   }

   # Specifies the main log format.
   log_format main '$remote_addr - $remote_user [$time_local] $host "$request" '
         '$status $bytes_sent $body_bytes_sent $request_time "$http_referer" '
         '"$http_user_agent" $request_length "$http_authorization" '
         '"$http_x_forwarded_proto" "$http_x_forwarded_for" '
         '$server_name';

   # Sets the path, format, and configuration for a buffered log write.
   access_log /proc/self/fd/1 main;

   server {
      listen 80 default_server;
      server_name westernwaters.org dev.westernwaters.org test.westernwaters.org wwdl-test.library.oregonstate.edu _;
      root /var/www/html;
      index index.php index.html;

      add_header  X-Frame-Options SAMEORIGIN;
      add_header  X-Content-Type-Options nosniff;
      add_header  Content-Security-Policy "frame-ancestors 'none'";

      location / {
         try_files $uri $uri/ /index.php$request_uri;
      }
      location = /favicon.ico {
         expires 1y;
         try_files /favicon.ico @empty;
         log_not_found off;
         access_log off;
         try_files /favicon.ico @empty;
      }
      location ~ ^/\.healthz$ {
         access_log off;
         return 204;
      }
      location @empty {
         expires 1y;
         empty_gif;
      }
      location ~ ^(.+\.php)(.*)$ {
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        set $path_info $fastcgi_path_info;

        if (!-f $document_root$fastcgi_script_name) {
           return 404;
        }

        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param PATH_TRANSLATED $document_root$path_info;
        fastcgi_pass 127.0.0.1:9000;
      }
   }
}
